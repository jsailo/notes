"use strict";(self.webpackChunknotes=self.webpackChunknotes||[]).push([[7459],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>d});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=l(r),h=a,d=p["".concat(s,".").concat(h)]||p[h]||g[h]||o;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=h;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[p]="string"==typeof e?e:a,i[1]=u;for(var l=2;l<o;l++)i[l]=r[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},6991:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>u,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:3,slug:"pushing-your-docusaurus-file-changes-to-github",title:"Pushing your docusaurus file changes to Github"},i=void 0,u={unversionedId:"tutorial-docusaurus/pushing-your-docusaurus-file-changes-to-github",id:"tutorial-docusaurus/pushing-your-docusaurus-file-changes-to-github",title:"Pushing your docusaurus file changes to Github",description:"Pushing your changes to Github",source:"@site/docs/tutorial-docusaurus/03-pushing-your-docusaurus-file-changes-to-github.md",sourceDirName:"tutorial-docusaurus",slug:"/tutorial-docusaurus/pushing-your-docusaurus-file-changes-to-github",permalink:"/notes/docs/tutorial-docusaurus/pushing-your-docusaurus-file-changes-to-github",draft:!1,editUrl:"https://github.com/jsailo/notes/tree/main/docs/tutorial-docusaurus/03-pushing-your-docusaurus-file-changes-to-github.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,slug:"pushing-your-docusaurus-file-changes-to-github",title:"Pushing your docusaurus file changes to Github"},sidebar:"tutorialSidebar",previous:{title:"Building and running Docusaurus locally",permalink:"/notes/docs/tutorial-docusaurus/building-running-docusaurus-ocally"},next:{title:"Deploying Docusaurus to github pages",permalink:"/notes/docs/tutorial-docusaurus/deploying-docusaurus-to-github-pages"}},s={},l=[{value:"Pushing your changes to Github",id:"pushing-your-changes-to-github",level:2}],c={toc:l},p="wrapper";function g(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"pushing-your-changes-to-github"},"Pushing your changes to Github"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Change the directory on your local computer."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"cd <location of your local repository>\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Initialize your git repository on the folder"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git init\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Add your files to repository."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git add .\n")))),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre"},'We use the git add . command here for the sake of simplicity.\nHere we are saying, "I want to add all the files in the directory\nto github.\n'))),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},'Commit the files. Here, you are saying "I\'m ready to commit the changes I have made".'),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'git commit -m "First commit"\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run the following to ensure that you will be pushing the files to the ",(0,a.kt)("inlineCode",{parentName:"p"},"main")," branch on your Github repository"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git branch -M main\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Now add the files and push the files to Github."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"git remote add origin git@github.com:<your_github_username>/notes.git\ngit push\n")))))}g.isMDXComponent=!0}}]);